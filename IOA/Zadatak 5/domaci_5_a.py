# -*- coding: utf-8 -*-
"""Domaci_5_a.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19Q2SiDpiHShoyPimwpKj56UBdUam-C_g
"""

import scipy.optimize
import numpy as np
import math

w = [-4, 2, -6, 4, 0, -2, -7, 9, -5, 3]

x_in = np.arange(-1.0 , 1.1, 0.1)

def f(w, x_in):
    f_result = 0.0
    
    for x in x_in:
        fr = y_out(x, w) - y_training(x)
        f_result += math.pow(fr, 2)

    f_result_finally = math.sqrt(f_result)

    return f_result_finally

def y_training(x_in):
    y_train = math.sin(math.pi * x_in)
    y_result = 0.5 * y_train
    return y_result

def y_out(x_in, w):
    y_out_result = 0.0

    for x in range(5):
        ym = math.tanh(x_in * w[x])
        y_out_result += w[x + 5] * ym

    y_out_result_finally = math.tanh(y_out_result)

    return y_out_result_finally



result = scipy.optimize.minimize(f, w, x_in, method = 'Nelder-Mead', options = {'maxiter' : 1389}) # optimizaciona funkcija

print("=========================================================================\n")

print("The solution of the optimization, W is \n")

for x in result.x:
    print('{0:.15f}\n'.format(x)) # result.x - the solution of the optimization

print("=========================================================================\n")

print('Value of objective function, f(w) = {0:.20f}'.format(result.fun)) # result.fun - values of objective function